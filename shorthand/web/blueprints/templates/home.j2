<!DOCTYPE html>
<html>
<head>

    {{ static_content['common_imports'] }}

    <!-- Tooltip pulgins -->
    <script src='/js/popper.min.js'></script>
    <script src='/js/tooltip.min.js'></script>

    <!-- Calendar Stuff -->
    <link href='/css/calendar.css' rel='stylesheet' />
    <script src='/js/calendar.js'></script>

    <meta charset='utf-8'>
    <title>Notes</title>
</head>
<body>

<div class="row fullwrapper">

    <div class="col-md-1 gutter"></div>

    <div class="col-md-10 pagewrapper" style="min-height: 1000px;">

        {{ static_content['header_html'] }}

        <!-- Main Page Content -->
        <div class="row">
            <div class="col-md-12" style="margin-left: 10px;">
                <div class="row">
                    <div class="col-md-6 homepage-info">
                        <a href="/todos"><h2>{{ num_todos }} Incomplete Todos</h2></a>
                    </div>
                    <div class="col-md-6 homepage-info">
                        <a href="/questions"><h2>{{ num_questions }} Open Questions</h2></a>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="homepage-info">
                    <h2>This week</h2>
                </div>
                <div id="calendar"></div>
            </div>
        </div>

    </div>
    <div class="col-md-1 gutter"></div>
</div>

{{ static_content['file_finder_modal'] }}

{{ static_content['error_modal'] }}

<script>
    // Load the calendar data on page load
    document.addEventListener('DOMContentLoaded', function() {
        reloadCalendar();
    });

    // Basic method to re-load the data in the calendar view
    function reloadCalendar() {
        $.ajax({
            url: '/api/v1/calendar',
            type: 'GET',
            success: function(responseData) {
                parseCalendarResponse(responseData);
            },
            error: function(responseData) {
                var loadedResponse = JSON.parse(responseData.responseText);
                showModal(loadedResponse.error);
            }
        });
    };

    // Parse the raw data returned by the API, and provide
    // the needed data to the calendar and chart
    function parseCalendarResponse(responseData) {

        // Transform data to the format we need for the chart and calendar
        var eventData = []

        calendarData = JSON.parse(responseData)
        for (var year in calendarData) {
            for (var month in calendarData[year]) {
                for (var day in calendarData[year][month]) {

                    // Prep data point to go on the chart
                    var timestamp = Date.parse(year + "-" + month + "-" + day + "T00:00:00");
                    var eventCount = calendarData[year][month][day].length;

                    for (var eventIndex in calendarData[year][month][day]) {
                        // Prep event to put on the calendar
                        var event = calendarData[year][month][day][eventIndex];
                        var formattedEvent = {
                            title: event['event'],
                            start: year + '-' + month + '-' + day,
                            url: '/render?path=' + event["file_path"] + '#line-number-' + event["line_number"],
                            type: event['type'],
                            textColor: 'black'
                        };
                        if (formattedEvent['type'] == 'section') {
                            formattedEvent['color'] = '#abeeff' // Light Blue
                            formattedEvent['textColor'] = 'black'
                        } else if (formattedEvent['type'] == 'incomplete_todo') {
                            formattedEvent['color'] = '#ffb2ab' // Red
                        } else if (formattedEvent['type'] == 'completed_todo') {
                            formattedEvent['color'] = '#c4c5ff' // Blue
                        } else if (formattedEvent['type'] == 'skipped_todo') {
                            formattedEvent['color'] = '#c4c4c4' // Grey
                        } else if (formattedEvent['type'] == 'question') {
                            formattedEvent['color'] = '#f4b8ff' // Purple
                        } else if (formattedEvent['type'] == 'answer') {
                            formattedEvent['color'] = '#afffa3' // Green
                        };
                        formattedEvent['description'] = formattedEvent['type'] + ' in ' + event['file_path'] + '<br /><br />' + formattedEvent['title']
                        eventData.push(formattedEvent);
                    }
                }
            }
        }
        drawCalendar(eventData);
    }

    function drawCalendar(eventData) {

        // Clear out the existing calendar
        $('#calendar').html('')

        // Draw Calendar
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridWeek',
            eventDidMount: function(info) {
                var tooltip = new Tooltip(info.el, {
                    title: info.event.extendedProps.description,
                    html: true,
                    delay: {
                        show: 1000,
                        hide: 100
                    },
                    placement: 'top',
                    trigger: 'hover',
                    container: 'body'
                });
            },
            events: eventData
        });
        calendar.render();
    };
</script>
</body>
</html>
